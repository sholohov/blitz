import{u as gt,h as A,_ as ft,a as ht}from"./disableScroll.DHm38N0M.js";import{_ as vt,a as bt}from"./CSelect.vue.Bwjii43I.js";import{f as D,v as K,x as wt,r as U,i as yt,o as m,c as f,a as o,O as Ct,V as kt,K as q,k as c,g as xt,h as At,n as z,s as E,q as Vt,m as R,b as l,w as u,F as M,A as O,C as St,t as N,T as $t,d as S,W as It,u as Bt,j as qt}from"./entry.DfoUuq3X.js";import{_ as Pt}from"./nuxt-link.CnjmgimZ.js";import{_ as Rt}from"./CDialog.vue.DCMX0sJA.js";import{c as H}from"./cloneDeep.BVCeudWk.js";import{u as Mt}from"./user.tsQBkfAX.js";import{f as T}from"./index.BWbWLZlG.js";import{a as I}from"./request.KP0oJ4ww.js";import{a as B}from"./index.Sqwnd-tJ.js";import{_ as Ot}from"./PageSection.vue.AXfPuMwQ.js";import{_ as Nt}from"./PageContent.vue.BsBPKap3.js";import"./index.CyzYM5Sw.js";import"./isArrayLike.B3jD5J6Q.js";import"./ContentBox.vue.k3uwJU1p.js";import"./CInput.vue.2V38F1JB.js";import"./notEmpty.BxBPJGBn.js";import"./debounce.ez8muWAK.js";import"./index.CJIEVhkZ.js";import"./leader.Dvb5M9sB.js";import"./nuxt-icon.DIr-5axS.js";import"./_plugin-vue_export-helper.DlAUqK2U.js";import"./client-only.IfhfVTTb.js";import"./dark-mode.DbjMN3Xk.js";import"./light-mode.C_PBuHVr.js";const Tt={class:"c-input-range__inner"},Ut={class:"c-input-range__input"},Dt=["max","min","step"],Wt=D({__name:"CInputRange",props:K({min:{type:Number,default:0},max:{type:Number,default:100},step:{type:Number,default:1},width:{type:String,default:void 0}},{modelValue:{required:!0,default:0},modelModifiers:{}}),emits:K(["keyup","keydown","input","change"],["update:modelValue"]),setup(h,{expose:$,emit:w}){const y=h,C=wt(h,"modelValue"),k=U(),v=yt(()=>{const _=(y.max-y.min)/100;return Math.round(C.value/_)}),n=w;return $({focus:()=>{var _;(_=k.value)==null||_.focus()},blur:()=>{var _;(_=k.value)==null||_.blur()}}),(_,r)=>(m(),f("div",{class:"c-input-range",style:q({width:h.width})},[o("div",Tt,[o("div",Ut,[Ct(o("input",{ref_key:"inputRef",ref:k,"onUpdate:modelValue":r[0]||(r[0]=d=>C.value=d),max:h.max,min:h.min,step:h.step,type:"range",class:"c-input-range__input-element",onInput:r[1]||(r[1]=d=>n("input",d)),onChange:r[2]||(r[2]=d=>n("change",d)),onKeyup:r[3]||(r[3]=d=>n("keyup")),onKeydown:r[4]||(r[4]=d=>n("keydown"))},null,40,Dt),[[kt,C.value,void 0,{number:!0}]]),o("span",{class:"c-input-range__input-thumb",style:q({transform:`translateX(${c(v)-100}%)`})},null,4)])])],4))}}),Ft={class:"widget-account-stat-constructor"},Gt={class:"widget-account-stat-constructor__inner"},Lt={class:"widget-account-stat-constructor__description"},jt={class:"content-area"},Kt={key:0,style:{color:"var(--color-red)"}},zt=o("p",null," Виджет для слежения за изменениями статистики вашего аккаунта. Используется в инструментах для стрима наподобие OBS Studio. Обновление статистики происходит 1 раз в 30 секунд. Сессия независима от аналогичной на странице аккаунта, по этому можно поделиться ссылкой. Выберите количество атрибутов и измените ширину окна браузера и плитки автоматически перестроятся на следующую линию. ",-1),Et=It('<div class="content-area"><h4>&quot;Командная игра&quot;</h4><p><i>Конфигурация =&gt; Командная игра</i></p><p> В игре участвует 2 и более взвода. Всем Участникам следует запустить сессию в одно время. Играется серия из определённого кол-ва боёв. После окончания сессии очки взвода суммируются. Победил взвод набравший больше очков. Счёт отображает атрибут - &quot;Командная игра&quot; </p><blockquote>Важно! Сессия не должна прерываться боями в &quot;Обычном режиме&quot;.</blockquote><table><tbody style="width:360px;"><tr style="text-align:left;"><th>Действие</th><th>Очки</th></tr><tr><td>Единица урона</td><td>+1</td></tr><tr><td>Победа</td><td>+500</td></tr><tr><td>Медаль &quot;Братья по оружию&quot;</td><td>+750</td></tr><tr><td>Медаль &quot;Решающий вклад&quot;</td><td>+1750</td></tr></tbody></table></div>',1),Ht={class:"widget-account-stat-constructor__params"},Qt={class:"widget-account-stat-constructor__param"},Xt=o("div",{class:"widget-account-stat-constructor__param-title"}," Атрибуты ",-1),Jt={class:"widget-account-stat-constructor__param-options"},Yt=["onClick"],Zt={key:0,class:"widget-account-stat-constructor__attributes-control"},te={class:"widget-account-stat-constructor__param"},ee=o("div",{class:"widget-account-stat-constructor__param-title"}," Конфигурация ",-1),oe={class:"widget-account-stat-constructor__param-options"},ne={class:"widget-account-stat-constructor__param"},se=o("div",{class:"widget-account-stat-constructor__param-title"}," Режим боя ",-1),ae={class:"widget-account-stat-constructor__param-options"},ce={class:"widget-account-stat-constructor__param"},ie=o("div",{class:"widget-account-stat-constructor__param-title"}," Цвет текста ",-1),le={class:"widget-account-stat-constructor__param-options"},re={class:"widget-account-stat-constructor__checkbox-group"},ue={class:"widget-account-stat-constructor__param"},de=o("div",{class:"widget-account-stat-constructor__param-title"}," Цвет фона ",-1),_e={class:"widget-account-stat-constructor__param-options"},me={class:"widget-account-stat-constructor__checkbox-group"},pe={class:"widget-account-stat-constructor__param"},ge=o("div",{class:"widget-account-stat-constructor__param-title"}," Прозрачность фона ",-1),fe={class:"widget-account-stat-constructor__param-options"},he={style:{margin:"0 0 0 10px"}},ve={key:0,class:"widget-account-stat-constructor__panel"},be={class:"content-area"},we={style:{"white-space":"nowrap"}},ye=o("p",null,"Начать новую?",-1),Ce={style:{display:"flex","justify-content":"flex-end"}},ke=D({__name:"WidgetAccountSessionConstructor",setup(h){const $=["battles","winRate","damagePerBattle","fragPerBattle","surviveRate","hitRate","spottedPerBattle","xpPerBattle","markOfMastery","medalBrothersInArms","medalCrucialContribution","teamGamePoints"],w=U(null),y=xt(),C=At(),k=gt(),v=Mt(),n=z({loading:0,account:null,achievementsInfo:null,accountAchievements:null,tanksAchievements:null,tanks:null,sessionUpdateAt:null}),W=[{value:null,label:"Обычный"},{value:"rating",label:"Рейтинговый"}],F=[{value:"default",label:"По умолчанию"},{value:"teamGamePoints",label:"Командная игра"}],_=["white","black"],r=["white","black","grey","green","orange","red","purple","blue"],d=T.makeAccountSessionWidgetFilters({battleMode:null,attributes:["battles","winRate","damagePerBattle"],style:"tile",textColor:"white",bgColor:"black",bgColorOpacity:.5}),a=z(H(d)),p=U($.map(t=>({key:t,isVisible:!1,label:E.stat.accountProp(t)??t})));Vt(async()=>{Object.assign(a,T.makeAccountSessionWidgetFilters({...H(d),...y.query})),b(),await nt(),G()});function Q(){a.config==="default"&&(a.attributes=d.attributes),a.config==="teamGamePoints"&&(a.attributes=["battles","winRate","damagePerBattle","medalBrothersInArms","medalCrucialContribution","teamGamePoints"])}function G(){p.value=$.map(t=>{var g,x;const e=(g=n.achievementsInfo)==null?void 0:g[t],i=((x=a.attributes)==null?void 0:x.includes(t))??!1;return e?{key:t,isVisible:i,label:String(e.name).replace(/\([^)]+\)/gi,"")??t}:{key:t,isVisible:i,label:E.stat.accountProp(t)??t}}),P()}function b(){C.replace({query:T.toRouteQuery(a)}).catch(()=>null)}function X(t){a.textColor=t,b()}function J(t){a.bgColor=t,b()}function P(){p.value.sort((t,e)=>!t.isVisible&&e.isVisible?1:t.isVisible&&!e.isVisible?-1:0)}function Y(t){const e=p.value.findIndex(i=>i.key===t.key);e!==-1&&(p.value[e].isVisible=!t.isVisible,a.attributes=p.value.filter(i=>i.isVisible).map(i=>i.key),a.config=null,P(),b())}function Z(t,e){const i=p.value.findIndex(x=>x.key===t.key);if(i===-1)return;const g=p.value.splice(i,1);p.value.splice(e?i-1:i+1,0,...g),P(),b()}function tt(){Q(),G(),b()}function et(){b()}function ot(){b()}async function nt(){n.loading++;try{const{data:t}=await I.encyclopedia.getAchievements();n.achievementsInfo=t??null}catch(t){A(t,{title:"Получение описания достижений"})}n.loading--}async function st(t){n.loading++;try{const{data:e}=await I.account.getInfo({account_id:t,extra:"statistics.rating"});n.account=(e==null?void 0:e[t])??null}catch(e){A(e,{title:"Получение данных игрока"})}n.loading--}async function at(t){n.loading++;try{const{data:e}=await I.account.getAchievements({account_id:t});n.accountAchievements=(e==null?void 0:e[t])??null}catch(e){A(e,{title:"Получение достижений игрока"})}n.loading--}async function ct(t){n.loading++;try{const{data:e}=await I.tanks.getAchievements({account_id:t});n.tanksAchievements=(e==null?void 0:e[t])??null}catch(e){A(e,{title:"Получение достижений техники игрока"})}n.loading--}async function it(t){n.loading++;try{const{data:e}=await I.tanks.getStats({account_id:t});n.tanks=e?e[t]:null}catch(e){A(e,{title:"Получение статистики по технике игрока"})}n.loading--}async function L(){const t=v.accountId;if(t&&(await Promise.all([st(t),at(t),ct(t),it(t)]),!(!n.account||!n.accountAchievements||!n.tanks||!n.tanksAchievements))){try{await Promise.all([B.session.account.set(t,n.account),B.session.accountAchievements.set(t,n.accountAchievements),B.session.tanks.set(t,n.tanks),B.session.tanksAchievements.set(t,n.tanksAchievements)]),k.add({type:"success",message:"Новая сессия успешно запущена"})}catch(e){A(e,{title:"Начало новой сессии"})}n.account=null,n.accountAchievements=null,n.tanks=null,n.tanksAchievements=null}}async function lt(){var t;await((t=w.value)==null?void 0:t.doClose()),await L()}async function rt(t){try{const{data:e}=await B.session.account.getList({ids:[t]});return e[0]??null}catch(e){return A(e,{title:"Получение сессии игрока"}),null}}async function ut(){var i;const t=v.accountId;if(!t)return;const e=await rt(t);e?(n.sessionUpdateAt=e.updateAt,await((i=w.value)==null?void 0:i.doOpen())):await L()}return(t,e)=>{const i=ft,g=ht,x=vt,j=bt,dt=Wt,_t=Pt,mt=Rt;return m(),f("div",Ft,[o("div",Gt,[o("div",Lt,[o("div",jt,[c(v).accountId?R("",!0):(m(),f("p",Kt," Создать виджет могут только авторизованные пользователи. ")),zt]),Et]),o("div",Ht,[o("div",Qt,[Xt,o("div",Jt,[l($t,{tag:"div",class:"widget-account-stat-constructor__attributes",name:"widget-account-stat-constructor__attributes-"},{default:u(()=>[(m(!0),f(M,null,O(c(p),(s,V)=>(m(),f("div",{key:s.key,class:St(["widget-account-stat-constructor__attributes-item",[s.isVisible?"widget-account-stat-constructor__attributes-item--is-visible":""]])},[o("button",{class:"widget-account-stat-constructor__attributes-label",onClick:pt=>Y(s)},N(s.label),9,Yt),s.isVisible?(m(),f("span",Zt,[l(g,{"is-text":"","is-square":"",disabled:V===0,class:"widget-account-stat-constructor__attributes-btn",onClick:pt=>Z(s,!0)},{default:u(()=>[l(i,{name:"swipe-up"})]),_:2},1032,["disabled","onClick"])])):R("",!0)],2))),128))]),_:1})])]),o("div",te,[ee,o("div",oe,[l(x,{modelValue:c(a).config,"onUpdate:modelValue":e[0]||(e[0]=s=>c(a).config=s),width:"200px",options:F,onChange:tt},null,8,["modelValue"])])]),o("div",ne,[se,o("div",ae,[l(x,{modelValue:c(a).battleMode,"onUpdate:modelValue":e[1]||(e[1]=s=>c(a).battleMode=s),width:"200px",options:W,onChange:et},null,8,["modelValue"])])]),o("div",ce,[ie,o("div",le,[o("div",re,[(m(),f(M,null,O(_,s=>l(j,{key:s,"model-value":c(a).textColor===s,class:"widget-account-stat-constructor__checkbox",onChange:V=>X(s)},{default:u(()=>[o("span",{style:q({color:`var(--color-${s})`}),class:"widget-account-stat-constructor__color-pick"},null,4)]),_:2},1032,["model-value","onChange"])),64))])])]),o("div",ue,[de,o("div",_e,[o("div",me,[(m(),f(M,null,O(r,s=>l(j,{key:s,"model-value":c(a).bgColor===s,class:"widget-account-stat-constructor__checkbox",title:c(a).textColor,onChange:V=>J(s)},{default:u(()=>[o("span",{style:q({color:`var(--color-${s})`}),class:"widget-account-stat-constructor__color-pick"},null,4)]),_:2},1032,["model-value","title","onChange"])),64))])])]),o("div",pe,[ge,o("div",fe,[l(dt,{modelValue:c(a).bgColorOpacity,"onUpdate:modelValue":e[2]||(e[2]=s=>c(a).bgColorOpacity=s),width:"200px",min:0,max:1,step:.1,onInput:ot},null,8,["modelValue"]),o("span",he,N((c(a).bgColorOpacity||0)*100)+"% ",1)])])]),c(v).accountId?(m(),f("div",ve,[l(g,{disabled:!c(v).accountId,class:"widget-account-stat-constructor__btn",onClick:ut},{default:u(()=>[S(" Начать сессию ")]),_:1},8,["disabled"]),l(_t,{class:"widget-account-stat-constructor__btn link",to:{name:"widgets-account-session",query:{...c(y).query,accountId:String(c(v).accountId)}},target:"_blank"},{default:u(()=>[S(" Перейти к виджету ")]),_:1},8,["to"])])):R("",!0)]),l(mt,{ref_key:"confirmDialogRef",ref:w,width:"400px",title:"Запуск новой сессии"},{footer:u(()=>[o("div",Ce,[l(g,{style:{margin:"0 4px 0 0"},onClick:e[3]||(e[3]=s=>{var V;return(V=c(w))==null?void 0:V.doClose()})},{default:u(()=>[S(" Отмена ")]),_:1}),l(g,{class:"widget-account-stat-constructor__btn",onClick:lt},{default:u(()=>[S(" Так точно! ")]),_:1})])]),default:u(()=>[o("div",be,[o("p",null,[S(" Текущая сессия от "),o("span",we,N(t.$formatter.date.toDateTime(c(n).sessionUpdateAt??0)),1),S(". ")]),ye])]),_:1},512)])}}}),Qe=D({__name:"index",setup(h){return Bt({title:"Виджеты"}),($,w)=>{const y=ke,C=Ot,k=Nt;return m(),qt(k,{class:"main-widgets"},{default:u(()=>[l(C,{title:"Статистика аккаунта",identity:"account-stat"},{default:u(()=>[l(y)]),_:1})]),_:1})}}});export{Qe as default};
