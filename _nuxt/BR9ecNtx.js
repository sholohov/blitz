import{w as h,_ as v,u as _}from"./tkvQsply.js";import{d as g,x as b,a as P,k as B,r as S,l as R,M as T,e as I,f as l,i as x,G as N,o as A}from"./DEnf58KD.js";import{u as M}from"./BeyRNKC8.js";import{c as u}from"./B4FMxlHh.js";import{s as U}from"./x_rD_Ya3.js";import{s as n}from"./BLrdWoSV.js";import"./BUTcSoIg.js";import"./DD4asW33.js";const G=g({__name:"widget",async setup(V){let m,d;const{$formatter:r}=b(),i=P(),f=M(),s=B({tanks:[],accountId:u.toNumber(i.query.accountId)??0,metricsOpacity:u.toNumber(i.query.opacity)??1,metricsWidth:u.toNumber(i.query.width)??0}),o=S([{key:"battles",label:r.stat.accountProp("battles"),value:0},{key:"winRate",label:r.stat.accountProp("winRate"),value:0},{key:"damagePerBattle",label:r.stat.accountProp("damagePerBattle"),value:0}]);[m,d]=h(async()=>_("get-tanks-vehicles",async()=>await f.getTanksVehicles().then(()=>!0))),await m,d();function y(){var e;let t={};s.tanks.forEach(a=>{t=n.sum(t,a.stat)}),(e=o.value)==null||e.forEach(a=>{a.key==="winRate"?a.value=n.winRate(t):a.key==="damagePerBattle"?a.value=n.damagePerBattle(t):a.value=t.battles??0})}function k(t){return{...t,battles:(t.losses||0)+(t.wins||0),winRate:n.winRate(t),damagePerBattle:n.damagePerBattle(t)}}function w(t){const e={...t.tank,stat:t.stat};return e.stat=k(e.stat),e.lastUpdateTime=t.lastUpdateTime,e}async function p(){const{data:t}=await N.handStat.tanks.get(s.accountId);s.tanks=[],t.raw.forEach(e=>{var c;const a=(c=f.vehicles)==null?void 0:c[e.tankId];a&&s.tanks.push(w({tank:a,stat:e.stat,lastUpdateTime:e.lastBattleTime}))}),y()}return R(async()=>{if(!s.accountId)return T().add({type:"warning",message:"ID пользователя не определён"});await p(),U(p,3e4)}),(t,e)=>{const a=v;return A(),I(a,{modelValue:l(o),"onUpdate:modelValue":e[0]||(e[0]=c=>x(o)?o.value=c:null),opacity:l(s).metricsOpacity,width:l(s).metricsWidth},null,8,["modelValue","opacity","width"])}}});export{G as default};
