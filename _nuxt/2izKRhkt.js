import{r as e,s as o,c as n}from"./DfPHqO9p.js";const c=t=>e({url:"session/account/"+t,method:"get"}),a=t=>e({url:"session/account/"+t,method:"delete"}),r=t=>e({url:"session/account/list/",method:"get",params:t}),i=(t,s)=>e({url:"session/account/",method:"post",data:{id:t,raw:s}}),g={get:c,remove:a,getList:r,set:i},u=t=>e({url:"session/account-achievements/"+t,method:"get"}),d=t=>e({url:"session/account-achievements/"+t,method:"delete"}),l=t=>e({url:"session/account-achievements/list",method:"get",params:t}),m=(t,s)=>e({url:"session/account-achievements",method:"post",data:{id:t,raw:s}}),h={get:u,remove:d,getList:l,set:m},k=t=>e({url:"session/account/tanks/"+t,method:"get"}),p=t=>e({url:"session/account/tanks/"+t,method:"delete"}),$=t=>e({url:"session/account/tanks/list",method:"get",params:t}),v=(t,s)=>e({url:"session/tanks",method:"post",data:{id:t,raw:s}}),f={get:k,remove:p,getList:$,set:v},L=t=>e({url:"session/tanks-achievements/"+t,method:"get"}),w=t=>e({url:"session/tanks-achievements/"+t,method:"delete"}),A=t=>e({url:"session/tanks-achievements/list",method:"get",params:t}),R=(t,s)=>e({url:"session/tanks-achievements",method:"post",data:{id:t,raw:s}}),D={get:L,remove:w,getList:A,set:R},x={account:g,tanks:f,tanksAchievements:D,accountAchievements:h},S=t=>e({url:"user/list/",method:"get",params:t}),b=t=>e({url:"user/action/",method:"put",data:{id:t.id}}),E=t=>e({url:"user/"+t,method:"get"}),F=t=>e({url:"user/",method:"post",data:t}),y=t=>e({url:"user/"+t,method:"delete"}),T={get:E,getList:S,set:F,action:b,remove:y},q=t=>{if(!t.token)throw new Error("Токен не найден");const s=new FormData;return s.append("id",String(t.id)),s.append("token",t.token),s.append("expiresAt",t.expiresAt),e({url:"auth/login/",method:"post",data:t})},j=()=>{const t=o.storage.getAccessToken();if(!t)throw new Error("Токен не найден");const s=new FormData;return s.append("token",t),e({url:"auth/logout/",method:"post",data:s})},z=t=>{if(!t.token)throw new Error("Токен не найден");const s=new FormData;return s.append("id",String(t.id)),s.append("token",t.token),s.append("expiresAt",t.expiresAt),e({url:"auth/prolongate/",method:"post",data:s})},B={prolongate:z,logout:j,login:q},C=t=>e({url:"stat/accounts/list/",method:"get",params:t}),G=t=>e({url:"stat/accounts/solo/",method:"get",params:t}),H=t=>e({url:"stat/accounts/diff/",method:"get",params:t}),I=t=>e({url:"stat/accounts/range/",method:"get",params:t}),J={getList:C,getSolo:G,getRange:I,getDiff:H},K=t=>e({url:"stat/clans/list",method:"get",params:t}),M=t=>e({url:"stat/clans/range",method:"get",params:t}),N={getList:K,getRange:M},O=t=>e({url:"stat/tanks/list/",method:"get",params:t}),P=t=>e({url:"stat/tanks/diff/",method:"get",params:t}),Q=t=>e({url:"stat/tanks/range/",method:"get",params:t}),U={getList:O,getRange:Q,getDiff:P},V=t=>e({url:"stat/clans-accounts/list",method:"get",params:t}),W=t=>e({url:"stat/clans-accounts/activity-list",method:"get",params:t}),X=t=>e({url:"stat/clans-accounts/range",method:"get",params:t}),Y={getList:V,getRange:X,getActivityList:W},Z={accounts:J,clans:N,clansAccounts:Y,tanks:U},_=t=>e({url:"leaderboards/accounts/",method:"get",params:t}),tt=t=>e({url:"leaderboards/tanks/",method:"get",params:t}),et={getAccounts:_,getTanks:tt},ot={stat:Z,session:x,user:T,auth:B,leaderboards:et,request:e,isResponse:n};export{ot as a};
