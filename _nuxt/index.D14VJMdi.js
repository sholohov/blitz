import{u as pt,_ as gt,a as ft}from"./disableScroll.DUPiWzNJ.js";import{_ as ht,a as vt}from"./CSelect.vue.E537XfLD.js";import{f as E,v as W,x as bt,r as T,i as wt,o as p,c as h,a as o,O as yt,V as Ct,K as B,k as c,g as kt,h as xt,n as j,s as K,q as At,m as P,b as r,w as d,F as R,A as M,C as Vt,t as O,T as St,d as V,W as $t,j as It}from"./entry.CiLr91Wg.js";import{_ as Bt}from"./nuxt-link.BEP6SH5y.js";import{_ as qt}from"./CDialog.vue.CAe_H11n.js";import{c as z}from"./cloneDeep.draooT6w.js";import{u as Pt}from"./user.DP2m5fhC.js";import{f as N}from"./index.BeeZBxgb.js";import{a as $}from"./request.DLwZlOwo.js";import{a as I}from"./index.DckVOxso.js";import{_ as Rt}from"./PageSection.vue.BfHBEnXD.js";import{_ as Mt}from"./PageContent.vue.CLEy-xld.js";import"./isArrayLike.TIPxVOhQ.js";import"./ContentBox.vue.CXIsIDnv.js";import"./CInput.vue.DjaOH7I-.js";import"./notEmpty.BxBPJGBn.js";import"./debounce.B98QxhRz.js";import"./index.CCZU5IUk.js";import"./leader.BewdLDxQ.js";import"./nuxt-icon.D6encLCw.js";import"./_plugin-vue_export-helper.DlAUqK2U.js";import"./client-only.BKegTxbq.js";import"./dark-mode.DXWXGq7Q.js";import"./light-mode.3ww4vHhL.js";const Ot={class:"c-input-range__inner"},Nt={class:"c-input-range__input"},Tt=["max","min","step"],Et=E({__name:"CInputRange",props:W({min:{type:Number,default:0},max:{type:Number,default:100},step:{type:Number,default:1},width:{type:String,default:void 0}},{modelValue:{required:!0,default:0},modelModifiers:{}}),emits:W(["keyup","keydown","input","change"],["update:modelValue"]),setup(v,{expose:S,emit:y}){const C=v,k=bt(v,"modelValue"),l=T(),b=wt(()=>{const m=(C.max-C.min)/100;return Math.round(k.value/m)}),s=y;return S({focus:()=>{var m;(m=l.value)==null||m.focus()},blur:()=>{var m;(m=l.value)==null||m.blur()}}),(m,u)=>(p(),h("div",{class:"c-input-range",style:B({width:v.width})},[o("div",Ot,[o("div",Nt,[yt(o("input",{ref_key:"inputRef",ref:l,"onUpdate:modelValue":u[0]||(u[0]=_=>k.value=_),max:v.max,min:v.min,step:v.step,type:"range",class:"c-input-range__input-element",onInput:u[1]||(u[1]=_=>s("input",_)),onChange:u[2]||(u[2]=_=>s("change",_)),onKeyup:u[3]||(u[3]=_=>s("keyup")),onKeydown:u[4]||(u[4]=_=>s("keydown"))},null,40,Tt),[[Ct,k.value,void 0,{number:!0}]]),o("span",{class:"c-input-range__input-thumb",style:B({transform:`translateX(${c(b)-100}%)`})},null,4)])])],4))}}),Ut={class:"widget-account-stat-constructor"},Dt={class:"widget-account-stat-constructor__inner"},Ft={class:"widget-account-stat-constructor__description"},Gt={class:"content-area"},Lt={key:0,style:{color:"var(--color-red)"}},Wt=o("p",null," Виджет для слежения за изменениями статистики вашего аккаунта. Используется в инструментах для стрима наподобие OBS Studio. Обновление статистики происходит 1 раз в 30 секунд. Сессия независима от аналогичной на странице аккаунта, по этому можно поделиться ссылкой. Выберите количество атрибутов и измените ширину окна браузера и плитки автоматически перестроятся на следующую линию. ",-1),jt=$t('<div class="content-area"><h4>&quot;Командная игра&quot;</h4><p><i>Конфигурация =&gt; Командная игра</i></p><p> В игре участвует 2 и более взвода. Всем Участникам следует запустить сессию в одно время. Играется серия из определённого кол-ва боёв. После окончания сессии очки взвода суммируются. Победил взвод набравший больше очков. Счёт отображает атрибут - &quot;Командная игра&quot; </p><blockquote>Важно! Сессия не должна прерываться боями в &quot;Обычном режиме&quot;.</blockquote><table><tbody style="width:360px;"><tr style="text-align:left;"><th>Действие</th><th>Очки</th></tr><tr><td>Единица урона</td><td>+1</td></tr><tr><td>Победа</td><td>+500</td></tr><tr><td>Медаль &quot;Братья по оружию&quot;</td><td>+750</td></tr><tr><td>Медаль &quot;Решающий вклад&quot;</td><td>+1750</td></tr></tbody></table></div>',1),Kt={class:"widget-account-stat-constructor__params"},zt={class:"widget-account-stat-constructor__param"},Qt=o("div",{class:"widget-account-stat-constructor__param-title"}," Атрибуты ",-1),Xt={class:"widget-account-stat-constructor__param-options"},Ht=["onClick"],Jt={key:0,class:"widget-account-stat-constructor__attributes-control"},Yt={class:"widget-account-stat-constructor__param"},Zt=o("div",{class:"widget-account-stat-constructor__param-title"}," Конфигурация ",-1),te={class:"widget-account-stat-constructor__param-options"},ee={class:"widget-account-stat-constructor__param"},oe=o("div",{class:"widget-account-stat-constructor__param-title"}," Режим боя ",-1),se={class:"widget-account-stat-constructor__param-options"},ne={class:"widget-account-stat-constructor__param"},ae=o("div",{class:"widget-account-stat-constructor__param-title"}," Цвет текста ",-1),ce={class:"widget-account-stat-constructor__param-options"},ie={class:"widget-account-stat-constructor__checkbox-group"},re={class:"widget-account-stat-constructor__param"},le=o("div",{class:"widget-account-stat-constructor__param-title"}," Цвет фона ",-1),ue={class:"widget-account-stat-constructor__param-options"},de={class:"widget-account-stat-constructor__checkbox-group"},_e={class:"widget-account-stat-constructor__param"},me=o("div",{class:"widget-account-stat-constructor__param-title"}," Прозрачность фона ",-1),pe={class:"widget-account-stat-constructor__param-options"},ge={style:{margin:"0 0 0 10px"}},fe={key:0,class:"widget-account-stat-constructor__panel"},he={class:"content-area"},ve={style:{"white-space":"nowrap"}},be=o("p",null,"Начать новую?",-1),we={style:{display:"flex","justify-content":"flex-end"}},ye=E({__name:"WidgetAccountSessionConstructor",setup(v){const S=["battles","winRate","damagePerBattle","fragPerBattle","surviveRate","hitRate","spottedPerBattle","xpPerBattle","markOfMastery","medalBrothersInArms","medalCrucialContribution","teamGamePoints"],y=T(null),C=kt(),k=xt(),l=pt(),b=Pt(),s=j({loading:0,account:null,achievementsInfo:null,accountAchievements:null,tanksAchievements:null,tanks:null,sessionUpdateAt:null}),U=[{value:null,label:"Обычный"},{value:"rating",label:"Рейтинговый"}],D=[{value:"default",label:"По умолчанию"},{value:"teamGamePoints",label:"Командная игра"}],m=["white","black"],u=["white","black","grey","green","orange","red","purple","blue"],_=N.makeAccountSessionWidgetFilters({battleMode:null,attributes:["battles","winRate","damagePerBattle"],style:"tile",textColor:"white",bgColor:"black",bgColorOpacity:.5}),a=j(z(_)),g=T(S.map(e=>({key:e,isVisible:!1,label:K.stat.accountProp(e)??e})));At(async()=>{Object.assign(a,N.makeAccountSessionWidgetFilters({...z(_),...C.query})),w(),await ot(),F()});function Q(){a.config==="default"&&(a.attributes=_.attributes),a.config==="teamGamePoints"&&(a.attributes=["battles","winRate","damagePerBattle","medalBrothersInArms","medalCrucialContribution","teamGamePoints"])}function F(){g.value=S.map(e=>{var f,x;const t=(f=s.achievementsInfo)==null?void 0:f[e],i=((x=a.attributes)==null?void 0:x.includes(e))??!1;return t?{key:e,isVisible:i,label:String(t.name).replace(/\([^)]+\)/gi,"")??e}:{key:e,isVisible:i,label:K.stat.accountProp(e)??e}}),q()}function w(){k.replace({query:N.toRouteQuery(a)}).catch(()=>null)}function X(e){a.textColor=e,w()}function H(e){a.bgColor=e,w()}function q(){g.value.sort((e,t)=>!e.isVisible&&t.isVisible?1:e.isVisible&&!t.isVisible?-1:0)}function J(e){const t=g.value.findIndex(i=>i.key===e.key);t!==-1&&(g.value[t].isVisible=!e.isVisible,a.attributes=g.value.filter(i=>i.isVisible).map(i=>i.key),a.config=null,q(),w())}function Y(e,t){const i=g.value.findIndex(x=>x.key===e.key);if(i===-1)return;const f=g.value.splice(i,1);g.value.splice(t?i-1:i+1,0,...f),q(),w()}function Z(){Q(),F(),w()}function tt(){w()}function et(){w()}async function ot(){s.loading++;try{const{data:e}=await $.encyclopedia.getAchievements();s.achievementsInfo=e??null}catch(e){console.error(e),l.add({type:"error",title:"Получение описания достижений",message:e instanceof Error?e.message:"Неизвестная ошибка"})}s.loading--}async function st(e){s.loading++;try{const{data:t}=await $.account.getInfo({account_id:e,extra:"statistics.rating"});s.account=(t==null?void 0:t[e])??null}catch(t){console.error(t),l.add({type:"error",title:"Получение данных игрока",message:t instanceof Error?t.message:"Неизвестная ошибка"})}s.loading--}async function nt(e){s.loading++;try{const{data:t}=await $.account.getAchievements({account_id:e});s.accountAchievements=(t==null?void 0:t[e])??null}catch(t){console.error(t),l.add({type:"error",title:"Получение достижений игрока",message:t instanceof Error?t.message:"Неизвестная ошибка"})}s.loading--}async function at(e){s.loading++;try{const{data:t}=await $.tanks.getAchievements({account_id:e});s.tanksAchievements=(t==null?void 0:t[e])??null}catch(t){console.error(t),l.add({type:"error",title:"Получение достижений техники игрока",message:t instanceof Error?t.message:"Неизвестная ошибка"})}s.loading--}async function ct(e){s.loading++;try{const{data:t}=await $.tanks.getStats({account_id:e});s.tanks=t?t[e]:null}catch(t){console.error(t),l.add({type:"error",title:"Получение статистики по технике игрока",message:t instanceof Error?t.message:"Неизвестная ошибка"})}s.loading--}async function G(){const e=b.accountId;if(e&&(await Promise.all([st(e),nt(e),at(e),ct(e)]),!(!s.account||!s.accountAchievements||!s.tanks||!s.tanksAchievements))){try{await Promise.all([I.session.account.set(e,s.account),I.session.accountAchievements.set(e,s.accountAchievements),I.session.tanks.set(e,s.tanks),I.session.tanksAchievements.set(e,s.tanksAchievements)]),l.add({type:"success",message:"Новая сессия успешно запущена"})}catch(t){console.error(t),l.add({type:"error",title:"Начало новой сессии",message:t instanceof Error?t.message:"Неизвестная ошибка"})}s.account=null,s.accountAchievements=null,s.tanks=null,s.tanksAchievements=null}}async function it(){var e;await((e=y.value)==null?void 0:e.doClose()),await G()}async function rt(e){try{const{data:t}=await I.session.account.getList({ids:[e]});return t[0]??null}catch(t){return console.error(t),l.add({type:"error",title:"Получение сессии игрока",message:t instanceof Error?t.message:"Неизвестная ошибка"}),null}}async function lt(){var i;const e=b.accountId;if(!e)return;const t=await rt(e);t?(s.sessionUpdateAt=t.updateAt,await((i=y.value)==null?void 0:i.doOpen())):await G()}return(e,t)=>{const i=gt,f=ft,x=ht,L=vt,ut=Et,dt=Bt,_t=qt;return p(),h("div",Ut,[o("div",Dt,[o("div",Ft,[o("div",Gt,[c(b).accountId?P("",!0):(p(),h("p",Lt," Создать виджет могут только авторизованные пользователи. ")),Wt]),jt]),o("div",Kt,[o("div",zt,[Qt,o("div",Xt,[r(St,{class:"widget-account-stat-constructor__attributes",name:"widget-account-stat-constructor__attributes-"},{default:d(()=>[(p(!0),h(R,null,M(c(g),(n,A)=>(p(),h("div",{key:n.key,class:Vt(["widget-account-stat-constructor__attributes-item",[n.isVisible?"widget-account-stat-constructor__attributes-item--is-visible":""]])},[o("button",{class:"widget-account-stat-constructor__attributes-label",onClick:mt=>J(n)},O(n.label),9,Ht),n.isVisible?(p(),h("span",Jt,[r(f,{"is-text":"","is-square":"",disabled:A===0,class:"widget-account-stat-constructor__attributes-btn",onClick:mt=>Y(n,!0)},{default:d(()=>[r(i,{name:"swipe-up"})]),_:2},1032,["disabled","onClick"])])):P("",!0)],2))),128))]),_:1})])]),o("div",Yt,[Zt,o("div",te,[r(x,{modelValue:c(a).config,"onUpdate:modelValue":t[0]||(t[0]=n=>c(a).config=n),width:"200px",options:D,onChange:Z},null,8,["modelValue"])])]),o("div",ee,[oe,o("div",se,[r(x,{modelValue:c(a).battleMode,"onUpdate:modelValue":t[1]||(t[1]=n=>c(a).battleMode=n),width:"200px",options:U,onChange:tt},null,8,["modelValue"])])]),o("div",ne,[ae,o("div",ce,[o("div",ie,[(p(),h(R,null,M(m,n=>r(L,{key:n,"model-value":c(a).textColor===n,class:"widget-account-stat-constructor__checkbox",onChange:A=>X(n)},{default:d(()=>[o("span",{style:B({color:`var(--color-${n})`}),class:"widget-account-stat-constructor__color-pick"},null,4)]),_:2},1032,["model-value","onChange"])),64))])])]),o("div",re,[le,o("div",ue,[o("div",de,[(p(),h(R,null,M(u,n=>r(L,{key:n,"model-value":c(a).bgColor===n,class:"widget-account-stat-constructor__checkbox",title:c(a).textColor,onChange:A=>H(n)},{default:d(()=>[o("span",{style:B({color:`var(--color-${n})`}),class:"widget-account-stat-constructor__color-pick"},null,4)]),_:2},1032,["model-value","title","onChange"])),64))])])]),o("div",_e,[me,o("div",pe,[r(ut,{modelValue:c(a).bgColorOpacity,"onUpdate:modelValue":t[2]||(t[2]=n=>c(a).bgColorOpacity=n),width:"200px",min:0,max:1,step:.1,onInput:et},null,8,["modelValue"]),o("span",ge,O((c(a).bgColorOpacity||0)*100)+"% ",1)])])]),c(b).accountId?(p(),h("div",fe,[r(f,{disabled:!c(b).accountId,class:"widget-account-stat-constructor__btn",onClick:lt},{default:d(()=>[V(" Начать сессию ")]),_:1},8,["disabled"]),r(dt,{class:"widget-account-stat-constructor__btn link",to:{name:"widgets-account-session",query:{...c(C).query,accountId:String(c(b).accountId)}},target:"_blank"},{default:d(()=>[V(" Перейти к виджету ")]),_:1},8,["to"])])):P("",!0)]),r(_t,{ref_key:"confirmDialogRef",ref:y,width:"400px",title:"Запуск новой сессии"},{footer:d(()=>[o("div",we,[r(f,{style:{margin:"0 4px 0 0"},onClick:t[3]||(t[3]=n=>{var A;return(A=c(y))==null?void 0:A.doClose()})},{default:d(()=>[V(" Отмена ")]),_:1}),r(f,{class:"widget-account-stat-constructor__btn",onClick:it},{default:d(()=>[V(" Так точно! ")]),_:1})])]),default:d(()=>[o("div",he,[o("p",null,[V(" Текущая сессия от "),o("span",ve,O(e.$formatter.date.toDateTime(c(s).sessionUpdateAt??0)),1),V(". ")]),be])]),_:1},512)])}}}),Ke=E({__name:"index",setup(v){return(S,y)=>{const C=ye,k=Rt,l=Mt;return p(),It(l,{class:"main-widgets"},{default:d(()=>[r(k,{title:"Статистика аккаунта",identity:"account-stat"},{default:d(()=>[r(C)]),_:1})]),_:1})}}});export{Ke as default};
