import{u as gt,h as A,_ as ft,a as ht}from"./disableScroll.BsGCYrkf.js";import{_ as vt,a as bt}from"./UiSelect.vue.CChtO11c.js";import{f as D,v as K,x as wt,r as T,i as yt,o as m,c as f,a as o,N as kt,U as Ct,K as q,k as c,g as xt,h as At,n as z,s as E,q as Vt,m as U,b as l,w as u,F as R,A as M,C as St,t as O,T as $t,d as S,V as It,u as Bt,j as qt}from"./entry.Bm-llWz1.js";import{_ as Pt}from"./nuxt-link.BmiB8yFf.js";import{_ as Ut}from"./UiDialog.vue.D81x2SMr.js";import{c as H}from"./cloneDeep.BNfpnd7q.js";import{u as Rt}from"./user.BZwCJDDY.js";import{f as N}from"./index.7vZybl1X.js";import{a as I}from"./request.CU-8ZD0i.js";import{a as B}from"./index.sjA9RjdT.js";import{_ as Mt}from"./PageSection.vue.B8sPfSqh.js";import{_ as Ot}from"./PageContent.vue.Bt0PAWqV.js";import"./index.CeO3w1EJ.js";import"./isArrayLike.qcTCkieX.js";import"./ContentBox.vue.jKhNwUeP.js";import"./UiInput.vue.CFT_pDMS.js";import"./notEmpty.BxBPJGBn.js";import"./debounce.BIsCNxQH.js";import"./index.jjrvQlfI.js";import"./leader.DeaPRBVT.js";import"./nuxt-icon.CC_2cq_E.js";import"./_plugin-vue_export-helper.DlAUqK2U.js";import"./client-only.7iUqzwT3.js";import"./dark-mode.CHerbLNN.js";import"./light-mode.CFsfJg1s.js";const Nt={class:"ui-input-range__inner"},Tt={class:"ui-input-range__input"},Dt=["max","min","step"],Ft=D({__name:"UiInputRange",props:K({min:{type:Number,default:0},max:{type:Number,default:100},step:{type:Number,default:1},width:{type:String,default:void 0}},{modelValue:{required:!0,default:0},modelModifiers:{}}),emits:K(["keyup","keydown","input","change"],["update:modelValue"]),setup(h,{expose:$,emit:w}){const y=h,k=wt(h,"modelValue"),C=T(),v=yt(()=>{const _=(y.max-y.min)/100;return Math.round(k.value/_)}),n=w;return $({focus:()=>{var _;(_=C.value)==null||_.focus()},blur:()=>{var _;(_=C.value)==null||_.blur()}}),(_,r)=>(m(),f("div",{class:"ui-input-range",style:q({width:h.width})},[o("div",Nt,[o("div",Tt,[kt(o("input",{ref_key:"inputRef",ref:C,"onUpdate:modelValue":r[0]||(r[0]=d=>k.value=d),max:h.max,min:h.min,step:h.step,type:"range",class:"ui-input-range__input-element",onInput:r[1]||(r[1]=d=>n("input",d)),onChange:r[2]||(r[2]=d=>n("change",d)),onKeyup:r[3]||(r[3]=d=>n("keyup")),onKeydown:r[4]||(r[4]=d=>n("keydown"))},null,40,Dt),[[Ct,k.value,void 0,{number:!0}]]),o("span",{class:"ui-input-range__input-thumb",style:q({transform:`translateX(${c(v)-100}%)`})},null,4)])])],4))}}),Gt={class:"widget-account-stat-constructor"},Lt={class:"widget-account-stat-constructor__inner"},Wt={class:"widget-account-stat-constructor__description"},jt={class:"content-area"},Kt={key:0,style:{color:"var(--color-red)"}},zt=o("p",null," Виджет для слежения за изменениями статистики вашего аккаунта. Используется в инструментах для стрима наподобие OBS Studio. Обновление статистики происходит 1 раз в 30 секунд. Сессия независима от аналогичной на странице аккаунта, по этому можно поделиться ссылкой. Выберите количество атрибутов и измените ширину окна браузера и плитки автоматически перестроятся на следующую линию. ",-1),Et=It('<div class="content-area"><h4>&quot;Командная игра&quot;</h4><p><i>Конфигурация =&gt; Командная игра</i></p><p> В игре участвует 2 и более взвода. Всем Участникам следует запустить сессию в одно время. Играется серия из определённого кол-ва боёв. После окончания сессии очки взвода суммируются. Победил взвод набравший больше очков. Счёт отображает атрибут - &quot;Командная игра&quot; </p><blockquote>Важно! Сессия не должна прерываться боями в &quot;Обычном режиме&quot;.</blockquote><table><tbody style="width:360px;"><tr style="text-align:left;"><th>Действие</th><th>Очки</th></tr><tr><td>Единица урона</td><td>+1</td></tr><tr><td>Победа</td><td>+500</td></tr><tr><td>Медаль &quot;Братья по оружию&quot;</td><td>+750</td></tr><tr><td>Медаль &quot;Решающий вклад&quot;</td><td>+1750</td></tr></tbody></table></div>',1),Ht={class:"widget-account-stat-constructor__params"},Qt={class:"widget-account-stat-constructor__param"},Xt=o("div",{class:"widget-account-stat-constructor__param-title"}," Атрибуты ",-1),Jt={class:"widget-account-stat-constructor__param-options"},Yt=["onClick"],Zt={key:0,class:"widget-account-stat-constructor__attributes-control"},te={class:"widget-account-stat-constructor__param"},ee=o("div",{class:"widget-account-stat-constructor__param-title"}," Конфигурация ",-1),oe={class:"widget-account-stat-constructor__param-options"},ne={class:"widget-account-stat-constructor__param"},se=o("div",{class:"widget-account-stat-constructor__param-title"}," Режим боя ",-1),ae={class:"widget-account-stat-constructor__param-options"},ce={class:"widget-account-stat-constructor__param"},ie=o("div",{class:"widget-account-stat-constructor__param-title"}," Цвет текста ",-1),le={class:"widget-account-stat-constructor__param-options"},re={class:"widget-account-stat-constructor__checkbox-group"},ue={class:"widget-account-stat-constructor__param"},de=o("div",{class:"widget-account-stat-constructor__param-title"}," Цвет фона ",-1),_e={class:"widget-account-stat-constructor__param-options"},me={class:"widget-account-stat-constructor__checkbox-group"},pe={class:"widget-account-stat-constructor__param"},ge=o("div",{class:"widget-account-stat-constructor__param-title"}," Прозрачность фона ",-1),fe={class:"widget-account-stat-constructor__param-options"},he={style:{margin:"0 0 0 10px"}},ve={key:0,class:"widget-account-stat-constructor__panel"},be={class:"content-area"},we={style:{"white-space":"nowrap"}},ye=o("p",null,"Начать новую?",-1),ke={style:{display:"flex","justify-content":"flex-end"}},Ce=D({__name:"WidgetAccountSessionConstructor",setup(h){const $=["battles","winRate","damagePerBattle","fragPerBattle","surviveRate","hitRate","spottedPerBattle","xpPerBattle","markOfMastery","medalBrothersInArms","medalCrucialContribution","teamGamePoints"],w=T(null),y=xt(),k=At(),C=gt(),v=Rt(),n=z({loading:0,account:null,achievementsInfo:null,accountAchievements:null,tanksAchievements:null,tanks:null,sessionUpdateAt:null}),F=[{value:null,label:"Обычный"},{value:"rating",label:"Рейтинговый"}],G=[{value:"default",label:"По умолчанию"},{value:"teamGamePoints",label:"Командная игра"}],_=["white","black"],r=["white","black","grey","green","orange","red","purple","blue"],d=N.makeAccountSessionWidgetFilters({battleMode:null,attributes:["battles","winRate","damagePerBattle"],style:"tile",textColor:"white",bgColor:"black",bgColorOpacity:.5}),a=z(H(d)),p=T($.map(t=>({key:t,isVisible:!1,label:E.stat.accountProp(t)??t})));Vt(async()=>{Object.assign(a,N.makeAccountSessionWidgetFilters({...H(d),...y.query})),b(),await nt(),L()});function Q(){a.config==="default"&&(a.attributes=d.attributes),a.config==="teamGamePoints"&&(a.attributes=["battles","winRate","damagePerBattle","medalBrothersInArms","medalCrucialContribution","teamGamePoints"])}function L(){p.value=$.map(t=>{var g,x;const e=(g=n.achievementsInfo)==null?void 0:g[t],i=((x=a.attributes)==null?void 0:x.includes(t))??!1;return e?{key:t,isVisible:i,label:String(e.name).replace(/\([^)]+\)/gi,"")??t}:{key:t,isVisible:i,label:E.stat.accountProp(t)??t}}),P()}function b(){k.replace({query:N.toRouteQuery(a)}).catch(()=>null)}function X(t){a.textColor=t,b()}function J(t){a.bgColor=t,b()}function P(){p.value.sort((t,e)=>!t.isVisible&&e.isVisible?1:t.isVisible&&!e.isVisible?-1:0)}function Y(t){const e=p.value.findIndex(i=>i.key===t.key);e!==-1&&(p.value[e].isVisible=!t.isVisible,a.attributes=p.value.filter(i=>i.isVisible).map(i=>i.key),a.config=null,P(),b())}function Z(t,e){const i=p.value.findIndex(x=>x.key===t.key);if(i===-1)return;const g=p.value.splice(i,1);p.value.splice(e?i-1:i+1,0,...g),P(),b()}function tt(){Q(),L(),b()}function et(){b()}function ot(){b()}async function nt(){n.loading++;try{const{data:t}=await I.encyclopedia.getAchievements();n.achievementsInfo=t??null}catch(t){A(t,{title:"Получение описания достижений"})}n.loading--}async function st(t){n.loading++;try{const{data:e}=await I.account.getInfo({account_id:t,extra:"statistics.rating"});n.account=(e==null?void 0:e[t])??null}catch(e){A(e,{title:"Получение данных игрока"})}n.loading--}async function at(t){n.loading++;try{const{data:e}=await I.account.getAchievements({account_id:t});n.accountAchievements=(e==null?void 0:e[t])??null}catch(e){A(e,{title:"Получение достижений игрока"})}n.loading--}async function ct(t){n.loading++;try{const{data:e}=await I.tanks.getAchievements({account_id:t});n.tanksAchievements=(e==null?void 0:e[t])??null}catch(e){A(e,{title:"Получение достижений техники игрока"})}n.loading--}async function it(t){n.loading++;try{const{data:e}=await I.tanks.getStats({account_id:t});n.tanks=e?e[t]:null}catch(e){A(e,{title:"Получение статистики по технике игрока"})}n.loading--}async function W(){const t=v.accountId;if(t&&(await Promise.all([st(t),at(t),ct(t),it(t)]),!(!n.account||!n.accountAchievements||!n.tanks||!n.tanksAchievements))){try{await Promise.all([B.session.account.set(t,n.account),B.session.accountAchievements.set(t,n.accountAchievements),B.session.tanks.set(t,n.tanks),B.session.tanksAchievements.set(t,n.tanksAchievements)]),C.add({type:"success",message:"Новая сессия успешно запущена"})}catch(e){A(e,{title:"Начало новой сессии"})}n.account=null,n.accountAchievements=null,n.tanks=null,n.tanksAchievements=null}}async function lt(){var t;await((t=w.value)==null?void 0:t.doClose()),await W()}async function rt(t){try{const{data:e}=await B.session.account.getList({ids:[t]});return e[0]??null}catch(e){return A(e,{title:"Получение сессии игрока"}),null}}async function ut(){var i;const t=v.accountId;if(!t)return;const e=await rt(t);e?(n.sessionUpdateAt=e.updateAt,await((i=w.value)==null?void 0:i.doOpen())):await W()}return(t,e)=>{const i=ft,g=ht,x=vt,j=bt,dt=Ft,_t=Pt,mt=Ut;return m(),f("div",Gt,[o("div",Lt,[o("div",Wt,[o("div",jt,[c(v).accountId?U("",!0):(m(),f("p",Kt," Создать виджет могут только авторизованные пользователи. ")),zt]),Et]),o("div",Ht,[o("div",Qt,[Xt,o("div",Jt,[l($t,{tag:"div",class:"widget-account-stat-constructor__attributes",name:"widget-account-stat-constructor__attributes-"},{default:u(()=>[(m(!0),f(R,null,M(c(p),(s,V)=>(m(),f("div",{key:s.key,class:St(["widget-account-stat-constructor__attributes-item",[s.isVisible?"widget-account-stat-constructor__attributes-item--is-visible":""]])},[o("button",{class:"widget-account-stat-constructor__attributes-label",onClick:pt=>Y(s)},O(s.label),9,Yt),s.isVisible?(m(),f("span",Zt,[l(g,{"is-text":"","is-square":"",disabled:V===0,class:"widget-account-stat-constructor__attributes-btn",onClick:pt=>Z(s,!0)},{default:u(()=>[l(i,{name:"swipe-up"})]),_:2},1032,["disabled","onClick"])])):U("",!0)],2))),128))]),_:1})])]),o("div",te,[ee,o("div",oe,[l(x,{modelValue:c(a).config,"onUpdate:modelValue":e[0]||(e[0]=s=>c(a).config=s),width:"200px",options:G,onChange:tt},null,8,["modelValue"])])]),o("div",ne,[se,o("div",ae,[l(x,{modelValue:c(a).battleMode,"onUpdate:modelValue":e[1]||(e[1]=s=>c(a).battleMode=s),width:"200px",options:F,onChange:et},null,8,["modelValue"])])]),o("div",ce,[ie,o("div",le,[o("div",re,[(m(),f(R,null,M(_,s=>l(j,{key:s,"model-value":c(a).textColor===s,class:"widget-account-stat-constructor__checkbox",onChange:V=>X(s)},{default:u(()=>[o("span",{style:q({color:`var(--color-${s})`}),class:"widget-account-stat-constructor__color-pick"},null,4)]),_:2},1032,["model-value","onChange"])),64))])])]),o("div",ue,[de,o("div",_e,[o("div",me,[(m(),f(R,null,M(r,s=>l(j,{key:s,"model-value":c(a).bgColor===s,class:"widget-account-stat-constructor__checkbox",title:c(a).textColor,onChange:V=>J(s)},{default:u(()=>[o("span",{style:q({color:`var(--color-${s})`}),class:"widget-account-stat-constructor__color-pick"},null,4)]),_:2},1032,["model-value","title","onChange"])),64))])])]),o("div",pe,[ge,o("div",fe,[l(dt,{modelValue:c(a).bgColorOpacity,"onUpdate:modelValue":e[2]||(e[2]=s=>c(a).bgColorOpacity=s),width:"200px",min:0,max:1,step:.1,onInput:ot},null,8,["modelValue"]),o("span",he,O((c(a).bgColorOpacity||0)*100)+"% ",1)])])]),c(v).accountId?(m(),f("div",ve,[l(g,{disabled:!c(v).accountId,class:"widget-account-stat-constructor__btn",onClick:ut},{default:u(()=>[S(" Начать сессию ")]),_:1},8,["disabled"]),l(_t,{class:"widget-account-stat-constructor__btn link",to:{name:"widgets-account-session",query:{...c(y).query,accountId:String(c(v).accountId)}},target:"_blank"},{default:u(()=>[S(" Перейти к виджету ")]),_:1},8,["to"])])):U("",!0)]),l(mt,{ref_key:"confirmDialogRef",ref:w,width:"400px",title:"Запуск новой сессии"},{footer:u(()=>[o("div",ke,[l(g,{style:{margin:"0 4px 0 0"},onClick:e[3]||(e[3]=s=>{var V;return(V=c(w))==null?void 0:V.doClose()})},{default:u(()=>[S(" Отмена ")]),_:1}),l(g,{class:"widget-account-stat-constructor__btn",onClick:lt},{default:u(()=>[S(" Так точно! ")]),_:1})])]),default:u(()=>[o("div",be,[o("p",null,[S(" Текущая сессия от "),o("span",we,O(t.$formatter.date.toDateTime(c(n).sessionUpdateAt??0)),1),S(". ")]),ye])]),_:1},512)])}}}),Qe=D({__name:"index",setup(h){return Bt({title:"Виджеты"}),($,w)=>{const y=Ce,k=Mt,C=Ot;return m(),qt(C,{class:"main-widgets"},{default:u(()=>[l(k,{title:"Статистика аккаунта",identity:"account-stat"},{default:u(()=>[l(y)]),_:1})]),_:1})}}});export{Qe as default};
